package rules.carl;
import com.mindsmiths.telegramAdapter.TelegramReceivedMessage;
import com.mindsmiths.ruleEngine.model.Initialize;
import com.mindsmiths.gpt3.completion.GPT3Completion;
import agents.Carl;


rule "First contact"
    salience 100
    when
        initialize: Initialize() from entry-point "agent-created"
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: Carl()
    then
        agent.sendMessage("Travel agent VoyagerCarl, or just Carl, will make your trip planning"
                          + " as fast as possible so that you can concentrate on exciting stuff" 
                          + " and have a great time visiting new places :).");
        delete(message);
end

rule "Handle message"
    when
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: Carl()
    then
        modify(agent) {addMessageToMemory("Human", message.getText())};
        agent.askGPT3();
        delete(message);
end

rule "Send GPT3 response"
    when
        gpt3Result: GPT3Completion() from entry-point "signals"
        agent: Carl()
    then
        String response = gpt3Result.getBestResponse();
        agent.sendMessage(response);
        modify(agent) {addMessageToMemory("Carl", response)};
        delete(gpt3Result);
end